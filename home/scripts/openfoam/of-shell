#!/usr/bin/env bash
# of-shell: interactive OpenFOAM shell in container, staying in current workdir.
set -euo pipefail

ENGINE="${OPENFOAM_ENGINE:-docker}"            # docker or podman
IMAGE="${OPENFOAM_IMAGE:-docker.io/opencfd/openfoam-default}"
TAG="${OPENFOAM_TAG:-2406}"

HOST_UID="$(id -u)"
HOST_GID="$(id -g)"

# Build mounts: map current directory to the same path inside the container
MOUNTS=(-v "$PWD:$PWD" -w "$PWD")
# Optional: pass host inputrc to container user 'openfoam' (harmless if not used)
if [ -f "$HOME/.inputrc" ]; then
  MOUNTS+=(-v "$HOME/.inputrc:/home/openfoam/.inputrc:ro")
fi

# Helper that sources bashrc if present for either ESI (openfoam.com) or Foundation (openfoam.org)
SRC_OF='
if compgen -G "/usr/lib/openfoam/openfoam*/etc/bashrc" > /dev/null; then
  # ESI/OpenCFD layout
  # shellcheck disable=SC1091
  source /usr/lib/openfoam/openfoam*/etc/bashrc
elif compgen -G "/opt/openfoam*/etc/bashrc" > /dev/null; then
  # Foundation layout
  # shellcheck disable=SC1091
  source /opt/openfoam*/etc/bashrc
fi
'

exec "${ENGINE}" run --rm -it \
  --user "${HOST_UID}:${HOST_GID}" \
  "${MOUNTS[@]}" \
  "${IMAGE}:${TAG}" \
  -- bash -c "${SRC_OF}; exec bash -i"

