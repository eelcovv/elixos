#!/usr/bin/env bash
# of-shell: Enter an OpenFOAM (ESI/Foundation) container shell
# with persistent cfMesh binaries on PATH and QoL mounts (inputrc/bashrc).
#
# - Uses env from Home Manager:
#     OPENFOAM_ENGINE  (docker|podman)
#     OPENFOAM_IMAGE   (full ref incl. tag, e.g. docker.io/opencfd/openfoam-dev:2406)
# - Persists sources/builds under ~/.local/share/openfoam on the host
# - Adds persisted cfMesh binaries to PATH inside the container
# - Maps ~/.inputrc -> /etc/inputrc (readline settings)
# - Optionally maps ~/.bashrc_openfoam -> /work/.bashrc and sources it
# - If OpenFOAM env is NOT pre-sourced (Foundation, etc.), it will try to source it.

set -euo pipefail

ENGINE="${OPENFOAM_ENGINE:-docker}"
IMAGE="${OPENFOAM_IMAGE:-docker.io/opencfd/openfoam-dev:2406}"

HOST_UID="$(id -u)"
HOST_GID="$(id -g)"

# Persistent storage for sources/builds and exported cfMesh binaries
HOST_PERSIST="${HOME}/.local/share/openfoam"
CONTAINER_PERSIST="/home/openfoam/.local/share/openfoam"
CFMESH_BIN_DIR_REL="cfmesh/bin"
CFMESH_BIN_HOST="${HOST_PERSIST}/${CFMESH_BIN_DIR_REL}"
CFMESH_BIN_CONT="${CONTAINER_PERSIST}/${CFMESH_BIN_DIR_REL}"

mkdir -p "${CFMESH_BIN_HOST}"

# Stable mounts: current dir -> /work
MOUNTS=(-v "$PWD:/work" -w /work)

# QoL: map host ~/.inputrc globally
if [[ -f "$HOME/.inputrc" ]]; then
  MOUNTS+=(-v "$HOME/.inputrc:/etc/inputrc:ro")
fi

# QoL: optional bashrc for container (no HOME override)
MOUNT_BASHRC_OPENFOAM=0
if [[ -f "$HOME/.bashrc_openfoam" ]]; then
  MOUNTS+=(-v "$HOME/.bashrc_openfoam:/work/.bashrc:ro")
  MOUNT_BASHRC_OPENFOAM=1
fi

# Persist mount for builds and exported tools
MOUNTS+=(-v "${HOST_PERSIST}:${CONTAINER_PERSIST}")

# Portable OpenFOAM env sourcing snippet (no 'read -d ""' to avoid set -e trap)
SRC_OF="$(cat <<'EOS'
if [[ -z "${WM_PROJECT_DIR:-}" ]]; then
  for f in \
    /usr/lib/openfoam/openfoam*/etc/bashrc \
    /opt/OpenFOAM/OpenFOAM-*/etc/bashrc \
    /opt/openfoam*/etc/bashrc \
    /usr/lib/openfoam/openfoam*/etc/openfoam \
    /opt/OpenFOAM/OpenFOAM-*/etc/openfoam \
    /opt/openfoam*/etc/openfoam
  do
    if [[ -r "$f" ]]; then
      . "$f"
      break
    fi
  done
fi
EOS
)"

# Build inner command for bash -lc
build_inner_cmd() {
  local cmd
  cmd='cd /work
'"${SRC_OF}"'
export PATH='"'"${CFMESH_BIN_CONT}"'"':"$PATH"
'
  if [[ "${MOUNT_BASHRC_OPENFOAM}" == "1" ]]; then
    cmd+='[ -r /work/.bashrc ] && . /work/.bashrc
'
  fi

  if [[ $# -gt 0 ]]; then
    # Non-interactive
    cmd+="$*
"
  else
    # Interactive
    cmd+='exec bash -i
'
  fi
  printf '%s' "${cmd}"
}

# If arguments provided, pass them into the container command string
INNER_CMD="$(build_inner_cmd "$@")"

exec "${ENGINE}" run --rm -it \
  --user "${HOST_UID}:${HOST_GID}" \
  "${MOUNTS[@]}" \
  --entrypoint /bin/bash \
  "${IMAGE}" -lc "${INNER_CMD}"

