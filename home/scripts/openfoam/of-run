#!/usr/bin/env bash
# of-run: run a single OpenFOAM command inside the container (non-interactive).
set -euo pipefail

if [[ $# -lt 1 ]]; then
  echo "Usage: of-run <command> [args...]" >&2
  exit 2
fi

ENGINE="${OPENFOAM_ENGINE:-docker}"                           # docker | podman
IMAGE_ENV="${OPENFOAM_IMAGE:-docker.io/opencfd/openfoam-dev}" # mag m√©t of zonder tag
TAG="${OPENFOAM_TAG:-2406}"

# If image_env already contains a tag (':'), use it completely; Different Plak: Tag
if [[ "$IMAGE_ENV" == *:* ]]; then
  IMAGE_REF="$IMAGE_ENV"
else
  IMAGE_REF="${IMAGE_ENV}:${TAG}"
fi

# Basis docker/podman args
RUN_ARGS=(
  --rm
  -t
  --user "$(id -u):$(id -g)"
  -v "$PWD:/work" -w /work
  --entrypoint /bin/bash
)

# QoL: map ~/.inputrc (optioneel)
if [[ -f "$HOME/.inputrc" ]]; then
  RUN_ARGS+=(-v "$HOME/.inputrc:/etc/inputrc:ro")
fi

# Build inner Bash -LC Script: Source or environment and carry out the command
# We pass on the user -command as "$@" via 'Bash -LC' trampoline,
# so that hooks/quotes such as * arguments * continue to exist.
INNER_CMD=$'cd /work\n'\
$'for f in \n'\
$'  /usr/lib/openfoam/openfoam*/etc/bashrc \n'\
$'  /opt/OpenFOAM/OpenFOAM-*/etc/bashrc \n'\
$'  /opt/openfoam*/etc/bashrc \n'\
$'  /usr/lib/openfoam/openfoam*/etc/openfoam \n'\
$'  /opt/OpenFOAM/OpenFOAM-*/etc/openfoam \n'\
$'  /opt/openfoam*/etc/openfoam \n'\
$'do\n'\
$'  [[ -r "$f" ]] && . "$f" && break\n'\
$'done\n'\
$'exec "$@"\n'

# Start container:
#   bash -lc "<source...; exec "$@">" -- bash <user-cmd> <args...>
# This causes the inner shell to run the  shell  exactly as you typed it
exec "$ENGINE" run "${RUN_ARGS[@]}" "$IMAGE_REF" \
  -lc "$INNER_CMD" -- bash "$@"

