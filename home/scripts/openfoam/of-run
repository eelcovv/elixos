#!/usr/bin/env bash
# of-run: Run a single OpenFOAM command inside the container (non-interactive).
# - Sources the OpenFOAM environment automatically.
# - Works with both Docker and Podman.
# - Automatically maps the current working directory to /work.
# - Prevents double tags like ":2406:2406".
# - Safely executes commands even with spaces, parentheses, or quotes.

set -euo pipefail

# --- Usage check ---
if [[ $# -lt 1 ]]; then
  echo "Usage: of-run <command> [args...]" >&2
  exit 2
fi

# --- Environment setup ---
ENGINE="${OPENFOAM_ENGINE:-docker}"                            # docker or podman
IMAGE_ENV="${OPENFOAM_IMAGE:-docker.io/opencfd/openfoam-default}"  # may include tag
TAG="${OPENFOAM_TAG:-2406}"

# Append :TAG only if not already present in IMAGE_ENV
if [[ "$IMAGE_ENV" == *:* ]]; then
  IMAGE_REF="$IMAGE_ENV"
else
  IMAGE_REF="${IMAGE_ENV}:${TAG}"
fi

# --- Container run arguments ---
RUN_ARGS=(
  --rm
  -t
  --user "$(id -u):$(id -g)"
  -v "$PWD:/work" -w /work
  --entrypoint /bin/bash
)

# Optional QoL mount for readline settings
if [[ -f "$HOME/.inputrc" ]]; then
  RUN_ARGS+=(-v "$HOME/.inputrc:/etc/inputrc:ro")
fi

# --- Build initialization command ---
# Enter /work, source the first available OpenFOAM bashrc, then exec the user's command.
INIT='cd /work; f=""; for f in \
/usr/lib/openfoam/openfoam*/etc/bashrc \
/opt/OpenFOAM/OpenFOAM-*/etc/bashrc \
/opt/openfoam*/etc/bashrc \
/usr/lib/openfoam/openfoam*/etc/openfoam \
/opt/OpenFOAM/OpenFOAM-*/etc/openfoam \
/opt/openfoam*/etc/openfoam; \
do [ -r "$f" ] && . "$f" && break; done; exec "$@"'

# --- Execute container ---
# Pass user command as "$@" so it executes exactly as typed.
exec "$ENGINE" run "${RUN_ARGS[@]}" "$IMAGE_REF" -lc "$INIT" of-run "$@"