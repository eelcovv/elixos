#!/usr/bin/env bash
# of-run: Run a single OpenFOAM command inside the container (non-interactive).
# - Sources OpenFOAM env (ESI/Foundation).
# - Enables alias expansion so commands like `foamVersion` (alias/function) work.
# - Avoids double image tags.
# - Uses Docker or Podman (via OPENFOAM_ENGINE).

set -euo pipefail

# --- Usage check ---
if [[ $# -lt 1 ]]; then
  echo "Usage: of-run <command> [args...]" >&2
  exit 2
fi

# --- Engine & image selection ---
ENGINE="${OPENFOAM_ENGINE:-docker}"                                # docker | podman
IMAGE_ENV="${OPENFOAM_IMAGE:-docker.io/opencfd/openfoam-default}"  # may include tag
TAG="${OPENFOAM_TAG:-2406}"

# Append :TAG only if IMAGE_ENV has no tag yet
if [[ "$IMAGE_ENV" == *:* ]]; then
  IMAGE_REF="$IMAGE_ENV"
else
  IMAGE_REF="${IMAGE_ENV}:${TAG}"
fi

# --- Container run args ---
RUN_ARGS=(
  --rm
  -t
  --user "$(id -u):$(id -g)"
  -v "$PWD:/work" -w /work
  --entrypoint /bin/bash
)

# Optional: map host readline settings
if [[ -f "$HOME/.inputrc" ]]; then
  RUN_ARGS+=(-v "$HOME/.inputrc:/etc/inputrc:ro")
fi

# --- Init inside container ---
# 1) cd /work
# 2) source OpenFOAM env (first readable candidate)
# 3) enable alias expansion for non-interactive shell
# 4) if the command is alias/function -> eval "$*"
#    else -> exec "$@" (binary/builtin)
INIT=$'cd /work; \
for f in \
  /usr/lib/openfoam/openfoam*/etc/bashrc \
  /opt/OpenFOAM/OpenFOAM-*/etc/bashrc \
  /opt/openfoam*/etc/bashrc \
  /usr/lib/openfoam/openfoam*/etc/openfoam \
  /opt/OpenFOAM/OpenFOAM-*/etc/openfoam \
  /opt/openfoam*/etc/openfoam; do \
  if [[ -r "$f" ]]; then . "$f"; break; fi; \
done; \
shopt -s expand_aliases; \
cmd="$1"; kind="$(type -t "$cmd" || true)"; \
if [[ "$kind" == "alias" || "$kind" == "function" ]]; then \
  eval "$*"; \
else \
  exec "$@"; \
fi'

# Note: pass a dummy $0 ("of-run") so $1 is the actual command.
exec "$ENGINE" run "${RUN_ARGS[@]}" "$IMAGE_REF" -lc "$INIT" of-run "$@"

