{
  config,
  pkgs,
  lib,
  ...
}: let
  # Paths relative to this module
  waybarDir = ./.;
  themesDir = ./themes;
  scriptsDir = ./scripts;

  # Resolves to "~/.config/waybar"
  cfgPath = "${config.xdg.configHome}/waybar";

  # Wait until Hyprland IPC responds before launching Waybar
  waitForHypr = pkgs.writeShellScript "wait-for-hypr" ''
    for i in $(seq 1 50); do
      if ${pkgs.hyprland}/bin/hyprctl -j monitors >/dev/null 2>&1; then
        exit 0
      fi
      sleep 0.1
    done
    exit 0
  '';
in {
  config = {
    ##########################################################################
    # Waybar — enable package, disable HM's autogenerated systemd unit
    ##########################################################################
    programs.waybar.enable = true;
    programs.waybar.package = pkgs.waybar;
    programs.waybar.systemd.enable = false;

    ##########################################################################
    # Single owner: declarative systemd user service for Waybar
    ##########################################################################
    systemd.user.services."waybar-managed" = {
      Unit = {
        Description = "Waybar (managed by Home Manager; uses ~/.config/waybar/{config,style.css})";
        After = []; # geen target of hyprland-env hier
        PartOf = ["hyprland-session.target"];
        Conflicts = ["waybar.service"];
      };
      Service = {
        Type = "simple";
        ExecStartPre = "${waitForHypr}";
        # Je mag -c ${cfgPath}/config óf direct config.jsonc gebruiken; hieronder direct JSONC:
        ExecStart = "${pkgs.waybar}/bin/waybar -l info -c ${cfgPath}/config.jsonc -s ${cfgPath}/style.css";
        ExecReload = "kill -SIGUSR2 $MAINPID";
        Restart = "on-failure";
        RestartSec = "500ms";
        Environment = [
          "WAYBAR_CONFIG=%h/.config/waybar/config"
          "WAYBAR_STYLE=%h/.config/waybar/style.css"
        ];
      };
      Install = {WantedBy = ["hyprland-session.target"];};
    };

    ##########################################################################
    # Publiceer repo-themes naar ~/.config/waybar/themes (read-only)
    ##########################################################################
    xdg.configFile."waybar/themes".source = themesDir;
    xdg.configFile."waybar/themes".recursive = true;

    ##########################################################################
    # Geen store-symlinks meer seeden: maak lokale bestanden
    ##########################################################################
    # Let op: we gebruiken geen xdg.configFile voor colors.css/modules.jsonc
    # en ook geen symlinks naar default theme. We schrijven echte bestanden.
    home.activation.ensureWaybarSeed = lib.hm.dag.entryAfter ["writeBoundary"] ''
      set -eu
      cfg_dir="''${XDG_CONFIG_HOME:-$HOME/.config}/waybar"

      mkdir -p "$cfg_dir"

      # 1) seed defaults als ECHTE bestanden (geen symlinks naar store)
      if [ ! -f "$cfg_dir/config.jsonc" ]; then
        install -Dm0644 "${themesDir}/default/config.jsonc" "$cfg_dir/config.jsonc"
      fi
      if [ ! -f "$cfg_dir/style.css" ]; then
        install -Dm0644 "${themesDir}/default/style.css" "$cfg_dir/style.css"
      fi

      # 2) colors.css & modules.jsonc lokaal aanmaken indien ontbrekend
      if [ ! -f "$cfg_dir/colors.css" ]; then
        printf '/* default colors */\n' >"$cfg_dir/colors.css"
        chmod 0644 "$cfg_dir/colors.css"
      fi
      if [ ! -f "$cfg_dir/modules.jsonc" ]; then
        printf '{}\n' >"$cfg_dir/modules.jsonc"
        chmod 0644 "$cfg_dir/modules.jsonc"
      fi

      # 3) compat: config -> config.jsonc (lokale symlink)
      ln -sfn "$cfg_dir/config.jsonc" "$cfg_dir/config"
    '';

    ##########################################################################
    # (Optioneel) tools: theme switcher & picker
    ##########################################################################
    home.file.".local/bin/waybar-switch-theme" = {
      source = scriptsDir + "/waybar-switch-theme.sh";
      executable = true;
    };
    home.file.".local/bin/waybar-pick-theme" = {
      source = scriptsDir + "/waybar-pick-theme.sh";
      executable = true;
    };

    ##########################################################################
    # PATH aanvullen met ~/.local/bin
    ##########################################################################
    home.sessionPath = lib.mkAfter ["$HOME/.local/bin"];
  };
}
